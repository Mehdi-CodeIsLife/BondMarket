package jboss.as.bond.market.model;
// default package
// Generated Mar 13, 2014 4:27:29 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Investisor generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "Investisor", catalog = "BondMarket")
public class Investisor extends User implements java.io.Serializable {

	private int id;
	private Role role;
	private Profile profile;
	private Date createdAt;
	private String email;
	private Boolean isActive;
	private String username;
	private String password;
	private Set<Transaction> transactionsForBuyer = new HashSet<Transaction>(0);
	private Set<Portfolio> portfolios = new HashSet<Portfolio>(0);
	private Set<Auction> auctionsForBuyer = new HashSet<Auction>(0);
	private Set<Auction> auctionsForOwner = new HashSet<Auction>(0);
	private Set<Transaction> transactionsForOwner = new HashSet<Transaction>(0);

	public Investisor() {
	}
	

	public Investisor( Profile profile, Date createdAt, String email,
			Boolean isActive, String username, String password) {
		this.profile = profile;
		this.createdAt = createdAt;
		this.email = email;
		this.isActive = isActive;
		this.username = username;
		this.password = password;
	}



	public Investisor(int id) {
		this.id = id;
	}


	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role")
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL )
	@JoinColumn(name = "profile")
	public Profile getProfile() {
		return this.profile;
	}

	public void setProfile(Profile profile) {
		this.profile = profile;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "createdAt", length = 10)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "isActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}


	@Column(name = "username")
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "investisorByBuyer")
	public Set<Transaction> getTransactionsForBuyer() {
		return this.transactionsForBuyer;
	}

	public void setTransactionsForBuyer(Set<Transaction> transactionsForBuyer) {
		this.transactionsForBuyer = transactionsForBuyer;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "investisor")
	public Set<Portfolio> getPortfolios() {
		return this.portfolios;
	}

	public void setPortfolios(Set<Portfolio> portfolios) {
		this.portfolios = portfolios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "investisorByBuyer")
	public Set<Auction> getAuctionsForBuyer() {
		return this.auctionsForBuyer;
	}

	public void setAuctionsForBuyer(Set<Auction> auctionsForBuyer) {
		this.auctionsForBuyer = auctionsForBuyer;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "investisorByOwner")
	public Set<Auction> getAuctionsForOwner() {
		return this.auctionsForOwner;
	}

	public void setAuctionsForOwner(Set<Auction> auctionsForOwner) {
		this.auctionsForOwner = auctionsForOwner;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "investisorByOwner")
	public Set<Transaction> getTransactionsForOwner() {
		return this.transactionsForOwner;
	}

	public void setTransactionsForOwner(Set<Transaction> transactionsForOwner) {
		this.transactionsForOwner = transactionsForOwner;
	}

	@Column(name = "password")
	public String getPassword() {
		return password;
	}

	
	public void setPassword(String password) {
		this.password = password;
	}

}
